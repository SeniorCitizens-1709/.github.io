[
  {
    "title": "条件渲染的方式：",
    "cont": [
      {
        "p1": "if、switch、||、&&、！、三目运算符三元表达式)"
      }
    ]
  },
  {
    "title": "条件渲染的适用场景",
    "cont": [
      {
        "p1": "1.对一个元素进行显示隐藏的时候，相当于vue的v-if、v-else"
      }
    ]
  },
  {
    "title": "边界错误：",
    "cont": [
      {
        "p1": "定义：使用私有钩子函数，捕获子组件的错误，并且优雅的使用备用ui来替代错误提示"
      },
      {
        "p1": "一、不能捕获的错误有："
      },
      {
        "p1": "1.接口错误"
      },
      {
        "p1": "2.事件里的错误"
      },
      {
        "p1": "3.服务端渲染"
      },
      {
        "p1": "4.非子组件错误"
      },
      {
        "p1": "二、使用：在本地开发环境中，还是会有错误提示的，但是打包代码上线后，给用户展示的就不会再有错误提示了。"
      },
      {
        "p1": "三、捕获方法：通过静态 static getDerivedStateFromError、componentDidCatch 这两个也是生命周期"
      }
    ]
  },
  {
    "title": "添加默认属性：",
    "cont": [
      {
        "p1": "defaultProps是class组件的特有属性，他是用来给组件设置默认属性的，通常情况下是为了防止由于props丢失或者没传、值为空的情况下作为默认值"
      },
      {
        "p1": "一、用法："
      },
      {
        "p1": "1. static defaultProps = {name: ‘我是一个通过class的static添加的默认属性’};"
      },
      {
        "p1": "2. static： class里的static关键字，给class添加一个私有的属性或方法.lass类名点出来，而实例化后的对象则没有这个私有属性"
      }
    ]
  }
]
