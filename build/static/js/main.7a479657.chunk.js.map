{"version":3,"sources":["blog/components/ReactSenior/allGaoji/Chacao/img/bs-004-fu.png","blog/components/ReactSenior/allGaoji/Chacao/img/bs-004-zi.png","blog/components/layout/index.jsx","blog/components/ReactBase/index.jsx","blog/components/componentType/index.jsx","blog/components/ReactSenior/allGaoji/index.jsx","blog/components/ThirdPlugins/index.jsx","blog/components/Questionnaire/components/child.jsx","blog/components/Questionnaire/index.jsx","blog/components/ReactSenior/allGaoji/top-Api/index.jsx","blog/components/ReactSenior/allGaoji/Jsx/index.jsx","blog/components/ReactSenior/allGaoji/Gaojie/index.jsx","blog/components/ReactSenior/allGaoji/Life/index.jsx","blog/components/ReactSenior/allGaoji/State/index.jsx","blog/components/ReactSenior/allGaoji/Chacao/index.jsx","blog/components/ReactSenior/allGaoji/events/index.jsx","blog/components/ReactSenior/allGaoji/condition/index.jsx","blog/components/ReactSenior/allGaoji/key/index.jsx","blog/components/ReactSenior/allGaoji/form/index.jsx","blog/components/login/login.jsx","blog/components/register/register.jsx","blog/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Sider","Content","leftNav","iconType","text","id","key","Mylayout","toggle","setState","collapsed","state","isCom","window","location","hash","slice","user","JSON","parse","sessionStorage","getItem","this","message","error","props","getsondata","index","indexOf","find","item","className","trigger","collapsible","style","height","color","lineHeight","theme","mode","defaultSelectedKeys","map","Item","onClick","type","background","padding","margin","children","React","Component","gutter","data","ReactBase","span","title","bordered","xx","content","content1","content2","content3","content4","Panel","Collapse","accordion","Data","header","isMap","arrData","itemData","size","cards","Gaoji","cont","route","ReactSenior","success","a","width","marginTop","ThirdPlugins","contentone","contenttwo","contentthree","contentfour","contentfive","checked","handlechange","disabled","labels","quxiao1","name","value","onChange","label","Index","handleChange","target","newCheckbox","checkbox","veri","radioLike","textarea","trim","length","warning","showModal","handleSubmit","event","preventDefault","reSetForm","copyState","checkboxTrue","i","setTimeout","visible","handleOk","e","handleCancel","isChecked","isLike","textitle","problem","cols","rows","onOk","onCancel","cancelText","okText","marginBottom","history","back","topapi","Fragment","jsx","p1","gaojie","cont1","cont2","life","p","src","require","alt","condition","form","Login","loginChange","yanzheng","userinfo","pwdinfo","pwd","login","getSonData","textAlign","autoComplete","prefix","placeholder","htmlType","Form","create","registerChange","regif","repwd","email","check","test","onRegister","obj","setItem","stringify","href","onhashchange","Dom","Jsx","Gaojie","Life","State","Chacao","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a479657.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bs-004-fu.de79985e.png\";","module.exports = __webpack_public_path__ + \"static/media/bs-004-zi.f1edb0ee.png\";","import React from \"react\";\r\nimport { Layout, Menu, Icon } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { message } from \"antd\";\r\nconst { Header, Sider, Content } = Layout;\r\n\r\n// 左侧一级导航的数据\r\nconst leftNav = [\r\n  {\r\n    iconType: \"solution\",\r\n    text: \"React概述\",\r\n    id: \"ReactBase\",\r\n    key: \"0\"\r\n  },\r\n  {\r\n    iconType: \"video-camera\",\r\n    text: \"React初级\",\r\n    id: \"ComponentType\",\r\n    key: \"1\"\r\n  },\r\n  {\r\n    iconType: \"upload\",\r\n    text: \"React高级\",\r\n    id: \"ReactSenior\",\r\n    key: \"2\"\r\n  },\r\n  {\r\n    iconType: \"pie-chart\",\r\n    text: \"React插件\",\r\n    id: \"third-plugins\",\r\n    key: \"3\"\r\n  },\r\n  {\r\n    iconType: \"upload\",\r\n    text: \"问卷调查\",\r\n    id: \"Questionnaire\",\r\n    key: \"4\"\r\n  }\r\n];\r\n\r\nexport default class Mylayout extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // 控制开展收起\r\n      collapsed: false,\r\n      isCom: window.location.hash.slice(1),\r\n      user: JSON.parse(sessionStorage.getItem(\"user\")).user || \"\"\r\n    };\r\n  }\r\n  // 切换的方法\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (!this.state.user) {\r\n      message.error(\"您还未登录，请前往登录\");\r\n      this.props.getsondata(\"Login\");\r\n    }\r\n  }\r\n  render() {\r\n    // Layout：容器组件，包裹组件\r\n    // Sider：侧边栏，放导航的\r\n    // Header：头部组件\r\n    // Menu：做折叠导航的\r\n    // Content：内容展示组件\r\n\r\n    // 获取当前页面在leftNav数据中的下标\r\n    let index = leftNav.indexOf(\r\n      leftNav.find(item => item.id === this.state.isCom)\r\n    );\r\n\r\n    return (\r\n      <Layout className=\"leftNav overallsituation-l-0\">\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div className=\"logo\" />\r\n          <div style={{ height: \"50px\", color: \"#fff\", lineHeight: \"50px\" }}>\r\n            欢迎您：<span style={{ color: \"red\" }}>{this.state.user}</span>\r\n          </div>\r\n\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[index + \"\" || \"0\"]}\r\n          >\r\n            {leftNav.map((item, index) => {\r\n              return (\r\n                <Menu.Item\r\n                  key={index}\r\n                  onClick={() => {\r\n                    this.props.getsondata(item.id);\r\n                  }}\r\n                >\r\n                  <Icon type={item.iconType} />\r\n                  <span>{item.text}</span>\r\n                </Menu.Item>\r\n              );\r\n            })}\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ background: \"#fff\", padding: 0 }}>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\r\n              onClick={this.toggle}\r\n            />\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              background: \"#fff\"\r\n            }}\r\n            className=\"content-gao\"\r\n          >\r\n            {/* 隐式渲染进来的组件 */}\r\n            {this.props.children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n// 引入卡片组件\r\nimport { Card, Col, Row } from 'antd';\r\nimport data from  './data.json'\r\nimport './index.scss'\r\nexport default  ()=>{\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t{\r\n\t\t\t\t\tdata.ReactBase.map((item,index)=>{\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Col className='LJG-col' span={8} key={index}>\r\n    \t\t    \t\t\t\t<Card className='LJG-card' title={item.title} bordered={true}>\r\n\t\t\t\t\t\t\t\t\t<h2>{item.xx}</h2>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content1}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content2}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content3}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content4}</p>\r\n    \t\t    \t\t\t\t</Card>\r\n    \t\t  \t\t\t\t</Col>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n    \t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\n// 引入json数据\r\nimport Data from './data.json'\r\n// 引入描述折叠面板、卡片组件\r\nimport { Collapse, Card } from 'antd';\r\nconst { Panel } = Collapse;\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<Collapse accordion>\r\n\t\t\t{/* 循环第一层：知识笔记概览 */}\r\n\t\t\t{Data.data.map((item, index) => {\r\n\t\t\t\treturn <Panel header={item.title} key={index}>\r\n\t\t\t\t\t{/* 三元表达式 判断数据中有没有isMap属性 ? 直接循环arrData数组 ：在Collapse插件里再循环第二层数据结构 */}\r\n\t\t\t\t\t{item.isMap ?\r\n\t\t\t\t\t\titem.arrData.map((item, index) => {\r\n\t\t\t\t\t\t\treturn < p key={index}> {item}</p>\r\n\t\t\t\t\t\t}) :\r\n\t\t\t\t\t\t// 在执行折叠面板\r\n\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t{/* 循环第二层arrData */}\r\n\t\t\t\t\t\t\t{item.arrData.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn <Panel header={item.title} key={index}>\r\n\t\t\t\t\t\t\t\t\t{/* 循环第三层itemData */}\r\n\t\t\t\t\t\t\t\t\t{item.itemData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (typeof item === 'object') {// 如果itemData数据里的是对象\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t// 使用卡片组件，循环Card数据里的每一项\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Card size=\"small\" title={item.text} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.cards.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <p key={index}>{item}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {//否则直接渲染\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p key={index}>{item}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Panel>\r\n\t\t\t})}\r\n\t\t</Collapse>\r\n\t)\r\n}","import React, { Component } from \"react\";\r\n// react高级\r\nimport { Card } from \"antd\";\r\n// 引入 card插件\r\n\r\n// 引入每一个标题导航的跳转模块\r\nimport { message } from \"antd\";\r\n// 引入antd的提示\r\nimport \"./index.scss\";\r\n\r\nconst Gaoji = [\r\n  {\r\n    title: \"顶级Api\",\r\n    cont: \"对顶级Api的详解\",\r\n    route: \"ReactSenior/Top-Api\"\r\n  },\r\n  {\r\n    title: \"Jsx\",\r\n    cont: \"对Jsx的详解\",\r\n    route: \"ReactSenior/Top-Jsx\"\r\n  },\r\n  {\r\n    title: \"高阶组件\",\r\n    cont: \"对高阶组件的详解\",\r\n    route: \"ReactSenior/High-order-component\"\r\n  },\r\n  {\r\n    title: \"生命周期\",\r\n    cont: \"对生命周期的详解\",\r\n    route: \"ReactSenior/life\"\r\n  },\r\n  {\r\n    title: \"state状态\",\r\n    cont: \"对状态state以及修改状态setState的详解\",\r\n    route: \"ReactSenior/state\"\r\n  },\r\n  {\r\n    title: \"插槽\",\r\n    cont: \"对插槽的详解\",\r\n    route: \"ReactSenior/chacao\"\r\n  },\r\n  {\r\n    title: \"事件\",\r\n    cont: \"对事、防抖与节流的详解\",\r\n    route: \"ReactSenior/events\"\r\n  },\r\n  {\r\n    title: \"条件渲染 \",\r\n    cont: \"对事件、边界错误、添加默认属性的详解\",\r\n    route: \"ReactSenior/condition\"\r\n  },\r\n  {\r\n    title: \"key\",\r\n    cont: \"对key的详解\",\r\n    route: \"ReactSenior/key\"\r\n  },\r\n  {\r\n    title: \"表单\",\r\n    cont: \"对表单、受控组件和非受控组件的详解\",\r\n    route: \"ReactSenior/form\"\r\n  }\r\n];\r\n// 设置每一项的子路由\r\n\r\nexport default class ReactSenior extends Component {\r\n  componentDidMount() {\r\n    // 加载完弹antd弹窗\r\n    message.success(\"欢迎来到思博的部分~🤣🤣\", 1);\r\n  }\r\n  render() {\r\n    // 根据条件循环，不同的子路由将Dom渲染为当前条件组件\r\n    return (\r\n      <div className=\"gaoji-bigbox-bs-004\">\r\n        {Gaoji.map((item, index) => {\r\n          return (\r\n            <Card\r\n              // 父级模块  六个导航模块\r\n              key={index}\r\n              title={item.title}\r\n              onClick={() => {\r\n                this.props.a(item.route);\r\n              }}\r\n              style={{ width: 400, marginTop: 30 }}\r\n            >\r\n              <p>{item.cont}</p>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// 思博测试\r\n// 思博测试\r\n// 思博测试\r\n// 思博测试\r\n// 思博测试\r\n","import React from 'react'\r\nimport { Divider } from 'antd';\r\nimport Data from './data.json'\r\nimport './index.css'\r\nexport default () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"thirdplugins\">\r\n\t\t\t\t{\r\n\t\t\t\t\tData.ThirdPlugins.map((item, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<p className=\"title\">{item.title}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentone}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contenttwo}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentthree}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentfour}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentfive}</p>\r\n\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nexport default (props) => {\r\n    const { data, checked, handlechange, disabled } = props\r\n    const { id, labels, type } = data\r\n    const quxiao1 = disabled ? id === 1 ? false : true : \"\"\r\n    return (\r\n        <>\r\n            {labels.map(item => {\r\n                return <label key={item.id}>\r\n                    <input\r\n                        disabled={quxiao1}\r\n                        type={type}\r\n                        name={type === \"radio\" ? \"radioLike\" : \"checkbox\"}\r\n                        value={type === \"radio\" ? item.value : item.id}\r\n                        checked={type === \"radio\" ? checked === item.value : checked[item.id]}\r\n                        onChange={handlechange} />\r\n                    {item.label}\r\n                </label>\r\n            })}\r\n        </>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './index.scss'\r\nimport data from './data.json'\r\nimport Child from './components/child'\r\n// 引入对话框、按钮、卡片、全局提示\r\nimport { Modal, Button, Card, message } from 'antd';\r\nclass Index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            radioLike: \"like\",//单选框\r\n            checkbox: [false, false, false],//复选框\r\n            textarea: '',//文本域\r\n            visible: false,//对话框\r\n            checkboxTrue: []//喜欢的水果具体名称\r\n        }\r\n        this.copyState = this.state\r\n    }\r\n    handleChange = ({ target }) => {\r\n        if (target.name === \"checkbox\") {\r\n            const newCheckbox = [...this.state.checkbox]\r\n            newCheckbox[target.value] = target.checked;\r\n            this.setState({\r\n                [target.name]: newCheckbox\r\n            })\r\n        } else {\r\n            this.setState({\r\n                [target.name]: target.value\r\n            })\r\n        }\r\n    }\r\n    // 验证\r\n    veri = () => {\r\n        const { radioLike, checkbox, textarea } = this.state;\r\n        if (radioLike === \"nolike\" ? false : !checkbox.find(item => item)) return message.warning(\"请选择你喜欢的水果\");\r\n        if (!textarea.trim() || textarea.length < 3) return message.warning(\"理由不能少于三个字\");\r\n        this.showModal();\r\n\r\n    }\r\n    // 表单提交事件\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()//取消默认事件\r\n        this.veri();\r\n    }\r\n    // 重置表单事件\r\n    reSetForm = () => {\r\n        this.setState(this.copyState)\r\n    }\r\n\r\n    render() {\r\n        const { radioLike, checkbox, textarea, checkboxTrue } = this.state\r\n        const isLike = radioLike === \"like\" ? true : false;\r\n        // 禁用状态\r\n        const disabled = isLike ? false : true;\r\n        // 文本域部分的问题\r\n        const textitle = isLike ? \"吃水果对身体的好处\" : \"你不喜欢吃水果的原因\"\r\n        let isChecked;\r\n\r\n        return (\r\n            <>\r\n                <form  >\r\n                    {data.map(item => {\r\n                        // switch 判断要传入的checked值\r\n                        switch (item.type) {\r\n                            case \"radio\":\r\n                                isChecked = radioLike\r\n                                break;\r\n                            case \"checkbox\":\r\n                                isChecked = checkbox\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        return <div key={item.id} className=\"section-002\">\r\n                            <h3>{item.id}、{item.problem}【{item.type === \"radio\" ? '单选' : \"多选\"}】</h3>\r\n                            {/* 调用子组件 */}\r\n                            <Child data={item} checked={isChecked} handlechange={this.handleChange} disabled={disabled} />\r\n                        </div>\r\n                    })}\r\n                    {/* 文本域部分 */}\r\n                    <div className=\"section-002\">\r\n                        <h3>{data.length + 1}、{textitle}</h3>\r\n                        <label>\r\n                            <textarea type=\"textarea\" name=\"textarea\" value={textarea} onChange={this.handleChange} cols=\"40\" rows=\"5\"></textarea>\r\n                        </label>\r\n\r\n                    </div>\r\n                    {/* 按钮部分 */}\r\n                    <label className=\"btns\">\r\n                        <Button type=\"primary\" onClick={this.handleSubmit}>提交</Button>\r\n                        <Button onClick={this.reSetForm}>重置</Button>\r\n                    </label>\r\n                </form>\r\n                {/* 对话框 */}\r\n                <Modal\r\n                    title=\"问卷调查结果\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={this.handleCancel}\r\n                    cancelText=\"取消\"\r\n                    okText=\"确定\"\r\n                >\r\n                    <Card title=\"你是否喜欢水果\" >\r\n                        <p>{isLike ? \"喜欢\" : \"不喜欢\"}</p>\r\n                    </Card>\r\n                    {\r\n                        isLike ? <Card title=\"你喜欢的水果：\" >\r\n                            {\r\n                                checkboxTrue.map((item, index) => {\r\n                                    return <p key={index}>{item}</p>\r\n                                })\r\n                            }\r\n                        </Card> : \"\"\r\n                    }\r\n                    <Card title={textitle} >\r\n                        <p>{textarea}</p>\r\n                    </Card>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n    // 对话框显示\r\n    showModal = () => {\r\n        this.setState({\r\n            checkboxTrue: []\r\n        })\r\n        for (let i = 0; i < this.state.checkbox.length; i++) {\r\n            if (this.state.checkbox[i]) {\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        checkboxTrue: [...this.state.checkboxTrue, data[1].labels[i].label]\r\n                    })\r\n                }, 0);\r\n            }\r\n        }\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n    // 点击对话框确定按钮\r\n    handleOk = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    // 点击对话框取消按钮\r\n    handleCancel = e => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n}\r\n\r\nexport default Index;","import React from \"react\";\r\nimport topapi from \"./top-api.json\";\r\n// 引入topapi的json文件\r\nimport { Divider } from \"antd\";\r\n\r\n// 引入分割线\r\nexport default props => {\r\n  // console.log(topapi);\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {topapi.map((item, index) => {\r\n        // 循环每一项标题\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <mark key=\"1\">{item.title}</mark>\r\n            <main\r\n              style={{\r\n                marginTop: \"10px\",\r\n                color: \"#999\",\r\n                marginBottom: \"30px\"\r\n              }}\r\n              key=\"2\"\r\n            >\r\n              {/* 循环内容 */}\r\n              {item.cont}\r\n            </main>\r\n            <Divider />\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport jsx from \"./jsx.json\";\r\n// 引入jsx的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {/* 循环数据 */}\r\n      {jsx.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\" style={{ color: \"red\" }}>\r\n              {item.title}\r\n              {/* 循环标题 */}\r\n            </mark>\r\n            <main key=\"2\">\r\n              {/* 循环json里的小数组也就是内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p1}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport gaojie from \"./gaojie.json\";\r\n// 引入高阶函数的json文件\r\nimport { Divider } from \"antd\";\r\n// 下划线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {/* 循环拿到的高阶函数的json */}\r\n      {gaojie.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            {/* 分割线 */}\r\n            <mark key=\"1\">{item.title}</mark>\r\n            {/* 每项的标题 */}\r\n            <main key=\"2\">\r\n              {/* 每项的内容 */}\r\n              <p key=\"2-1\">{item.cont}</p>\r\n              <p key=\"2-2\">{item.cont1}</p>\r\n              <p key=\"2-3\">{item.cont2}</p>\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Divider } from \"antd\";\r\n// 引入分割线\r\nimport life from \"./life.json\";\r\n// 引入生命周期json文件\r\nexport default props => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      <li>\r\n        {/* 做了一个生命周期的简述 */}\r\n        某个事件（事务）成立时候触发的函数\r\n        一个组件完整的生命周期包含实例化阶段、更新活动阶段、销毁阶段三个阶段\r\n      </li>\r\n      {life.map((item, index) => {\r\n        // 循环每一项\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n\r\n            <mark key=\"1\" style={{ marginTop: \"20px\" }}>\r\n              {item.life}\r\n              {/* 标题 */}\r\n            </mark>\r\n            {/* 内容 */}\r\n            <main key=\"2\">{item.cont}</main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport state from \"./state.json\";\r\n// 引入state的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {/* 循环拿到的数据 */}\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {state.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\">{item.title}</mark>\r\n            {/* 标题 */}\r\n            <main key=\"2\">\r\n              {/* 循环json小数组拿每一项的内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n// antd的分割线\r\nimport { Divider } from \"antd\";\r\n// react高级之插槽页\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n\r\n      <mark>\r\n        插槽：父组件引入子组件的地方采用双标签，在里面写一些结构，在对应子组件里直接用props.children接收即可渲染到页面，这叫隐式渲染也就是react的插槽\r\n        <main style={{ color: \"red\" }}>举例说明：</main>\r\n        {/* 举例的父组件图片 */}\r\n        <img\r\n          style={{ width: \"100%\", height: \"200px\" }}\r\n          src={require(\"./img/bs-004-fu.png\")}\r\n          alt=\"\"\r\n        />\r\n        <Divider />\r\n        <Divider />\r\n        <Divider />\r\n        {/* 三个分割线 */}\r\n        <img\r\n          // 举例的子组件图片\r\n          style={{ width: \"100%\", height: \"200px\" }}\r\n          src={require(\"./img/bs-004-zi.png\")}\r\n          alt=\"\"\r\n        />\r\n      </mark>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport event from \"./event.json\";\r\n// 引入jsx的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {/* 循环数据 */}\r\n      {event.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\" style={{ color: \"red\" }}>\r\n              {item.title}\r\n              {/* 循环标题 */}\r\n            </mark>\r\n            <main key=\"2\">\r\n              {/* 循环json里的小数组也就是内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p1}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport condition from \"./condition.json\";\r\n// 引入jsx的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {/* 循环数据 */}\r\n      {condition.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\" style={{ color: \"red\" }}>\r\n              {item.title}\r\n              {/* 循环标题 */}\r\n            </mark>\r\n            <main key=\"2\">\r\n              {/* 循环json里的小数组也就是内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p1}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport key from \"./key.json\";\r\n// 引入jsx的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {/* 循环数据 */}\r\n      {key.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\" style={{ color: \"red\" }}>\r\n              {item.title}\r\n              {/* 循环标题 */}\r\n            </mark>\r\n            <main key=\"2\">\r\n              {/* 循环json里的小数组也就是内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p1}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport form from \"./form.json\";\r\n// 引入jsx的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <a\r\n          onClick={() => {\r\n            window.history.back();\r\n          }}\r\n        >\r\n          返回\r\n        </a>\r\n      </div>\r\n      {/* 返回按钮 */}\r\n      {/* 循环数据 */}\r\n      {form.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\" style={{ color: \"red\" }}>\r\n              {item.title}\r\n              {/* 循环标题 */}\r\n            </mark>\r\n            <main key=\"2\">\r\n              {/* 循环json里的小数组也就是内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p1}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./login.scss\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { message } from \"antd\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    let user = JSON.parse(sessionStorage.getItem(\"user\")) || \"\"; //拿到缓存的值\r\n    this.state = {\r\n      // 设置默认值\r\n      user: user.user, //默认拿到的user值\r\n      pwd: \"\", //默认拿到的pwd值\r\n      userinfo: user.user,\r\n      pwdinfo: user.pwd\r\n    };\r\n  }\r\n  loginChange = ({ target }) => {\r\n    this.setState({\r\n      // es6 的写法，采用三元表达式，将你当前的name项对应的值改为你当前输入的value的值，\r\n      [target.name]: target.value\r\n    });\r\n    // console.log(target.name);\r\n    // console.log(target.value);\r\n  };\r\n  // 验证函数\r\n  yanzheng = () => {\r\n    const { userinfo, pwdinfo } = this.state;\r\n    if (this.state.user !== userinfo) {\r\n      message.error(\"用户名错误\");\r\n      return false;\r\n    } else if (this.state.pwd !== pwdinfo) {\r\n      message.error(\"密码错误\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n    // 从state里拿到默认值\r\n  };\r\n  // 登录函数\r\n  login = () => {\r\n    if (this.yanzheng()) {\r\n      // 调用验证函数\r\n      message.success(\"登录成功\");\r\n      this.props.getSonData(\"ReactBase\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    if (!sessionStorage.getItem(\"user\")) {\r\n      message.error(\"您并没有注册记录，请返回注册\");\r\n      setTimeout(() => {\r\n        this.props.getSonData(\"Register\");\r\n      }, 1500);\r\n\r\n      return false;\r\n    }\r\n  }\r\n  render() {\r\n    const { user, pwd } = this.state;\r\n    // 从state里将默认值取出\r\n    return (\r\n      <div className=\"loginbox-bs-004\">\r\n        <Form className=\"login-form\">\r\n          <div\r\n            style={{\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n              marginBottom: \"30px\"\r\n            }}\r\n          >\r\n            登录页\r\n          </div>\r\n\r\n          <Form.Item>\r\n            <Input\r\n              onChange={this.loginChange}\r\n              autoComplete=\"off\"\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"用户名\"\r\n              value={user}\r\n              name=\"user\"\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // value的值为从state里拿到的动态进行改变的值\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              onChange={this.loginChange}\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              name=\"pwd\"\r\n              value={pwd}\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // value的值为从state里拿到的动态进行改变的值\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <div className=\"login-btnbox-bs-004\">\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                onClick={this.login}\r\n                // 调用登录函数\r\n              >\r\n                登录\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  this.props.getSonData(\"Register\");\r\n                }}\r\n                // 调用父组件传递的函数更改默认显示的值实现切换效果\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ background: \"red\" }}\r\n              >\r\n                去注册\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Login);\r\n","import React, { Component } from \"react\";\r\nimport \"./register.scss\";\r\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { message } from \"antd\";\r\n// 采用antd的message进行提示信息\r\nimport { Modal } from \"antd\";\r\n// 采用antd的提示框\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    // 设置默认值\r\n    this.state = {\r\n      user: \"\", //用户名\r\n      pwd: \"\", //密码\r\n      repwd: \"\", //确认密码\r\n      email: \"\", //邮箱\r\n      check: false, //协议\r\n      visible: false\r\n    };\r\n  }\r\n  showModal = event => {\r\n    // antd里的显示弹框的函数\r\n    event.preventDefault();\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  handleOk = e => {\r\n    // 点击弹窗的ok将弹窗隐藏的函数\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleCancel = e => {\r\n    // 点击弹窗的关闭将弹窗隐藏的函数\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  registerChange = ({ target }) => {\r\n    // es6 的写法，采用三元表达式，将你当前的name项对应的值改为你当前输入的value的值，\r\n    // 并且判断如果是checkbox的话就进行专门的true和false的赋值，否则就向当前的input框赋value值\r\n    this.setState({\r\n      [target.name]: target.name === \"check\" ? target.checked : target.value\r\n    });\r\n  };\r\n  // 验证方法\r\n  regif = () => {\r\n    const { user, pwd, repwd, email, check } = this.state;\r\n    // 将所有值从state里取出\r\n    if (\r\n      user.trim() === \"\" ||\r\n      pwd.trim() === \"\" ||\r\n      repwd.trim() === \"\" ||\r\n      email.trim() === \"\"\r\n      // 判断除了CheckBox以外所有的值都不能是空\r\n    ) {\r\n      message.error(\"不能有空项\");\r\n    } else if (!user.trim() || user.length < 6) {\r\n      // 判断用户名不能为空或者长度不能小于6\r\n      message.error(\"用户名不能为空且长度不小于6位\");\r\n      return false;\r\n    } else if (!pwd.trim() || !/^(\\w){6,20}$/.test(pwd)) {\r\n      // 判断密码不能为空并且采用正则做深一层的验证\r\n      message.error(\"密码不能为空并且必须是6-20个字母、数字、下划线\");\r\n\r\n      return false;\r\n    } else if (pwd !== repwd) {\r\n      // 判断密码和确认密码必须一致\r\n      message.error(\"两次密码不一致\");\r\n      return false;\r\n    } else if (!email.trim()) {\r\n      // 判断邮箱不能为空\r\n      message.error(\"邮箱不能为空\");\r\n      return false;\r\n    } else if (\r\n      !/^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/.test(email)\r\n      // 采用正则匹配邮箱格式\r\n    ) {\r\n      message.error(\"邮箱格式不正确，请检查\");\r\n\r\n      return false;\r\n    } else if (!check) {\r\n      // 判断是否选中，选中为true 取反则进不来此判断，没选中为false取反为true则进来此判断\r\n      message.error(\"请同意协议\");\r\n    } else {\r\n      return true;\r\n      // 都满足返回true\r\n    }\r\n  };\r\n  // 注册函数\r\n  onRegister = () => {\r\n    if (this.regif()) {\r\n      let obj = {};\r\n      obj.user = this.state.user;\r\n      obj.pwd = this.state.pwd;\r\n      sessionStorage.setItem(\"user\", JSON.stringify(obj));\r\n      message.success(\"注册成功\");\r\n      this.props.getSonData(\"Login\");\r\n      // 验证函数返回true则注册成功\r\n    }\r\n  };\r\n  render() {\r\n    const { user, pwd, repwd, email, check } = this.state;\r\n    // 将所有值从state里取出\r\n    return (\r\n      <div className=\"register-box-bs-004\">\r\n        <Form className=\"login-form\">\r\n          <div style={{ height: \"30px\", textAlign: \"center\" }}>注册页</div>\r\n          <Form.Item>\r\n            <Input\r\n              autoComplete=\"off\"\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"用户名\"\r\n              value={user}\r\n              name=\"user\"\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // value的值为从state里拿到的动态进行改变的值\r\n              onChange={this.registerChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"密码\"\r\n              value={pwd}\r\n              name=\"pwd\"\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // value的值为从state里拿到的动态进行改变的值\r\n              onChange={this.registerChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"password\"\r\n              placeholder=\"确认密码\"\r\n              value={repwd}\r\n              name=\"repwd\"\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // value的值为从state里拿到的动态进行改变的值\r\n              onChange={this.registerChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              type=\"email\"\r\n              placeholder=\"邮箱\"\r\n              value={email}\r\n              autoComplete=\"off\"\r\n              name=\"email\"\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // value的值为从state里拿到的动态进行改变的值\r\n              onChange={this.registerChange}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Checkbox\r\n              checked={check}\r\n              value=\"checkbox\"\r\n              name=\"check\"\r\n              // 绑定必要的name和onchange函数，通过name获取当前项\r\n              // checked的值为从state里拿到的动态进行改变的true和false\r\n              onChange={this.registerChange}\r\n            >\r\n              我已阅读并同意该 <a href=\"###\" onClick={this.showModal}>协议</a>\r\n              {/* 点击事件，弹出antd的Model弹窗 */}\r\n            </Checkbox>\r\n            <div className=\"register-btnbox-bs-004\">\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                onClick={this.onRegister}\r\n              // 触发注册函数\r\n              >\r\n                立即注册\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  this.props.getSonData(\"Login\");\r\n                }}\r\n                // 调用父组件传递的函数更改默认显示的值实现切换效果\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n                style={{ background: \"red\" }}\r\n              >\r\n                去登录\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n        <Modal\r\n          // antd的Model弹窗\r\n          title=\"协议内容\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <p>欢迎您{this.state.user.length >= 6 ? this.state.user : \"\"}...</p>\r\n          <p>我们其实也没啥协议...</p>\r\n          <p>您就看着玩玩关了就行...</p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Login);\r\n","import React, { Component } from \"react\";\r\nimport Mylayout from \"./components/layout\";\r\n// 引入React基础概述\r\nimport \"antd/dist/antd.css\";\r\n// react组件分类\r\nimport ReactBase from \"./components/ReactBase\";\r\nimport ComponentType from \"./components/componentType\";\r\nimport ReactSenior from \"./components/ReactSenior/allGaoji\";\r\nimport Third from \"./components/ThirdPlugins\";\r\nimport Questionnaire from \"./components/Questionnaire\";\r\n\r\n// ······························································\r\n// 这里是思博页面的子路由组件\r\nimport TopApi from \"./components/ReactSenior/allGaoji/top-Api\";\r\nimport Jsx from \"./components/ReactSenior/allGaoji/Jsx\";\r\nimport Gaojie from \"./components/ReactSenior/allGaoji/Gaojie\";\r\nimport Life from \"./components/ReactSenior/allGaoji/Life\";\r\nimport State from \"./components/ReactSenior/allGaoji/State\";\r\nimport Chacao from \"./components/ReactSenior/allGaoji/Chacao\";\r\nimport Events from \"./components/ReactSenior/allGaoji/events\";\r\nimport Condition from \"./components/ReactSenior/allGaoji/condition\";\r\nimport Key from \"./components/ReactSenior/allGaoji/key\";\r\nimport Form from \"./components/ReactSenior/allGaoji/form\";\r\n\r\n// ···································································\r\n// 思博登/注册录页\r\nimport Login from \"./components/login/login\";\r\nimport Register from \"./components/register/register\";\r\n// ···································································\r\nexport default class index extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // 将获取到的hash值赋值给isCom\r\n      isCom: window.location.hash.slice(1) || \"Register\"\r\n    };\r\n\r\n    window.onhashchange = () => {\r\n      // 获取并更改为当前hash值\r\n      this.setState({\r\n        isCom: window.location.hash.slice(1)\r\n      });\r\n    };\r\n  }\r\n  // 收听子组件传递数据\r\n  getSonData = id => {\r\n    window.location.hash = id;\r\n    // 设置hash值\r\n  };\r\n  // 渲染函数\r\n  // 带/的是思博配的子路由\r\n\r\n  render() {\r\n    let Dom = \"\";\r\n    // 声明一个dom作为接下来条件渲染的值\r\n    switch (this.state.isCom) {\r\n      case \"Register\":\r\n        Dom = <Register getSonData={this.getSonData} />;\r\n        break;\r\n      case \"Login\":\r\n        Dom = <Login getSonData={this.getSonData} />;\r\n        break;\r\n      case \"ReactBase\":\r\n        Dom = <ReactBase />;\r\n        break;\r\n      case \"ComponentType\":\r\n        Dom = <ComponentType />;\r\n        break;\r\n      case \"Questionnaire\":\r\n        Dom = <Questionnaire />;\r\n        break;\r\n      // 根据hash做条件渲染\r\n      case \"ReactSenior\":\r\n        Dom = <ReactSenior a={this.getSonData} />;\r\n        break;\r\n      case \"third-plugins\":\r\n        Dom = <Third />;\r\n        break;\r\n      case \"ReactSenior/Top-Api\":\r\n        Dom = <TopApi />;\r\n        break;\r\n      case \"ReactSenior/Top-Jsx\":\r\n        Dom = <Jsx />;\r\n        break;\r\n      case \"ReactSenior/High-order-component\":\r\n        Dom = <Gaojie />;\r\n        break;\r\n      case \"ReactSenior/life\":\r\n        Dom = <Life />;\r\n        break;\r\n      case \"ReactSenior/state\":\r\n        Dom = <State />;\r\n        break;\r\n      case \"ReactSenior/chacao\":\r\n        Dom = <Chacao />;\r\n        break;\r\n      case \"ReactSenior/events\":\r\n        Dom = <Events />;\r\n        break;\r\n      case \"ReactSenior/condition\":\r\n        Dom = <Condition />;\r\n        break;\r\n      case \"ReactSenior/key\":\r\n        Dom = <Key />;\r\n        break;\r\n      case \"ReactSenior/form\":\r\n        Dom = <Form />;\r\n        break;\r\n      default:\r\n    }\r\n    return (\r\n      <>\r\n        {this.state.isCom === \"Register\" ? (\r\n          <Register getSonData={this.getSonData} />\r\n        ) : this.state.isCom === \"Login\" ? (\r\n          <Login getSonData={this.getSonData} />\r\n        ) : (\r\n              <Mylayout getsondata={this.getSonData}>{Dom}</Mylayout>\r\n            )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// 引入Ant design 样式\r\nimport 'antd/es/date-picker/style/css';\r\nimport './style/index.css';\r\nimport App from './blog';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}