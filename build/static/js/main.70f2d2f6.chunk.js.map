{"version":3,"sources":["blog/components/ReactSenior/allGaoji/Chacao/img/bs-004-fu.png","blog/components/ReactSenior/allGaoji/Chacao/img/bs-004-zi.png","blog/components/layout/index.jsx","blog/components/ReactBase/index.jsx","blog/components/componentType/index.jsx","blog/components/ReactSenior/allGaoji/top-Api/index.jsx","blog/components/ReactSenior/allGaoji/Jsx/index.jsx","blog/components/ReactSenior/allGaoji/Gaojie/index.jsx","blog/components/ReactSenior/allGaoji/Life/index.jsx","blog/components/ReactSenior/allGaoji/State/index.jsx","blog/components/ReactSenior/allGaoji/Chacao/index.jsx","blog/components/ReactSenior/allGaoji/index.jsx","blog/components/ThirdPlugins/index.jsx","blog/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","Layout","Sider","Content","leftNav","iconType","text","id","Mylayout","toggle","setState","collapsed","state","className","trigger","collapsible","this","theme","mode","defaultSelectedKeys","map","item","index","Item","key","onClick","props","getsondata","type","style","background","padding","margin","children","React","Component","gutter","data","ReactBase","span","title","bordered","xx","content","content1","content2","content3","content4","Panel","Collapse","accordion","Data","header","isMap","arrData","itemData","size","cards","width","topapi","Fragment","marginTop","color","marginBottom","cont","jsx","p1","gaojie","cont1","cont2","life","p","height","src","require","alt","Gaoji","route","ReactSenior","getSonData","idx","window","location","hash","isCom","slice","onhashchange","message","success","Dom","Jsx","Gaojie","Life","State","Chacao","console","log","ThirdPlugins","contentone","contenttwo","contentthree","contentfour","contentfive","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70f2d2f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bs-004-fu.de79985e.png\";","module.exports = __webpack_public_path__ + \"static/media/bs-004-zi.f1edb0ee.png\";","import React from \"react\";\r\nimport { Layout, Menu, Icon } from \"antd\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\n// 左侧一级导航的数据\r\nconst leftNav = [\r\n  {\r\n    iconType: \"solution\",\r\n    text: \"React概述\",\r\n    id: \"ReactBase\"\r\n  },\r\n  {\r\n    iconType: \"video-camera\",\r\n    text: \"React初级\",\r\n    id: \"ComponentType\"\r\n  },\r\n  {\r\n    iconType: \"upload\",\r\n    text: \"React高级\",\r\n    id: \"ReactSenior\"\r\n  },\r\n  {\r\n    iconType: \"pie-chart\",\r\n    text: \"React插件\",\r\n    id: \"third-plugins\"\r\n  }\r\n];\r\n\r\nexport default class Mylayout extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // 控制开展收起\r\n      collapsed: false\r\n    };\r\n  }\r\n  // 切换的方法\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n  render() {\r\n    // Layout：容器组件，包裹组件\r\n    // Sider：侧边栏，放导航的\r\n    // Header：头部组件\r\n    // Menu：做折叠导航的\r\n    // Content：内容展示组件\r\n    return (\r\n      <Layout className=\"leftNav overallsituation-l-0\">\r\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n            {\r\n              leftNav.map((item, index) => {\r\n                return (\r\n                  <Menu.Item\r\n                    key={index}\r\n                    onClick={() => {\r\n                      this.props.getsondata(item.id);\r\n                    }}\r\n                  >\r\n                    <Icon type={item.iconType} />\r\n                    <span>{item.text}</span>\r\n                  </Menu.Item>\r\n                );\r\n              })\r\n            }\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Header style={{ background: \"#fff\", padding: 0 }}>\r\n            <Icon\r\n              className=\"trigger\"\r\n              type={this.state.collapsed ? \"menu-unfold\" : \"menu-fold\"}\r\n              onClick={this.toggle}\r\n            />\r\n          </Header>\r\n          <Content\r\n            style={{\r\n              margin: \"24px 16px\",\r\n              padding: 24,\r\n              background: \"#fff\"\r\n            }}\r\n            className=\"content-gao\"\r\n          >\r\n            {/* 隐式渲染进来的组件 */}\r\n            {this.props.children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n// 引入卡片组件\r\nimport { Card, Col, Row } from 'antd';\r\nimport data from  './data.json'\r\nimport './index.scss'\r\nexport default  ()=>{\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t{\r\n\t\t\t\t\tdata.ReactBase.map((item,index)=>{\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Col className='LJG-col' span={8} key={index}>\r\n    \t\t    \t\t\t\t<Card className='LJG-card' title={item.title} bordered={true}>\r\n\t\t\t\t\t\t\t\t\t<h2>{item.xx}</h2>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content1}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content2}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content3}</p>\r\n\t\t\t\t\t\t\t\t\t<p className='LJG-card-p'>{item.content4}</p>\r\n    \t\t    \t\t\t\t</Card>\r\n    \t\t  \t\t\t\t</Col>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n    \t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\n// 引入json数据\r\nimport Data from './data.json'\r\n// 引入描述折叠面板、卡片组件\r\nimport { Collapse, Card } from 'antd';\r\nconst { Panel } = Collapse;\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<Collapse accordion>\r\n\t\t\t{/* 循环第一层：知识笔记概览 */}\r\n\t\t\t{Data.data.map((item, index) => {\r\n\t\t\t\treturn <Panel header={item.title} key={index}>\r\n\t\t\t\t\t{/* 三元表达式 判断数据中有没有isMap属性 ? 直接循环arrData数组 ：在Collapse插件里再循环第二层数据结构 */}\r\n\t\t\t\t\t{item.isMap ?\r\n\t\t\t\t\t\titem.arrData.map((item, index) => {\r\n\t\t\t\t\t\t\treturn < p key={index}> {item}</p>\r\n\t\t\t\t\t\t}) :\r\n\t\t\t\t\t\t// 在执行折叠面板\r\n\t\t\t\t\t\t<Collapse>\r\n\t\t\t\t\t\t\t{/* 循环第二层arrData */}\r\n\t\t\t\t\t\t\t{item.arrData.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn <Panel header={item.title} key={index}>\r\n\t\t\t\t\t\t\t\t\t{/* 循环第三层itemData */}\r\n\t\t\t\t\t\t\t\t\t{item.itemData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\tif (typeof item === 'object') {// 如果itemData数据里的是对象\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t// 使用卡片组件，循环Card数据里的每一项\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Card size=\"small\" title={item.text} key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.cards.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <p key={index}>{item}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p key={index}>{item}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Panel>\r\n\t\t\t})}\r\n\t\t</Collapse>\r\n\t)\r\n}","import React from \"react\";\r\nimport topapi from \"./top-api.json\";\r\n// 引入topapi的json文件\r\nimport { Divider } from \"antd\";\r\n// 引入分割线\r\nexport default props => {\r\n  // console.log(topapi);\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      {topapi.map((item, index) => {\r\n        // 循环每一项标题\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <mark key=\"1\">{item.title}</mark>\r\n            <main\r\n              style={{\r\n                marginTop: \"10px\",\r\n                color: \"#999\",\r\n                marginBottom: \"30px\"\r\n              }}\r\n              key=\"2\"\r\n            >\r\n              {/* 循环内容 */}\r\n              {item.cont}\r\n            </main>\r\n            <Divider />\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport jsx from \"./jsx.json\";\r\n// 引入jsx的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {/* 循环数据 */}\r\n      {jsx.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\" style={{ color: \"red\" }}>\r\n              {item.title}\r\n              {/* 循环标题 */}\r\n            </mark>\r\n            <main key=\"2\">\r\n              {/* 循环json里的小数组也就是内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p1}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport gaojie from \"./gaojie.json\";\r\n// 引入高阶函数的json文件\r\nimport { Divider } from \"antd\";\r\n// 下划线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {/* 循环拿到的高阶函数的json */}\r\n      {gaojie.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            {/* 分割线 */}\r\n            <mark key=\"1\">{item.title}</mark>\r\n            {/* 每项的标题 */}\r\n            <main key=\"2\">\r\n              {/* 每项的内容 */}\r\n              <p key=\"2-1\">{item.cont}</p>\r\n              <p key=\"2-2\">{item.cont1}</p>\r\n              <p key=\"2-3\">{item.cont2}</p>\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Divider } from \"antd\";\r\n// 引入分割线\r\nimport life from \"./life.json\";\r\n// 引入生命周期json文件\r\nexport default props => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <li>\r\n        {/* 做了一个生命周期的简述 */}\r\n        某个事件（事务）成立时候触发的函数\r\n        一个组件完整的生命周期包含实例化阶段、更新活动阶段、销毁阶段三个阶段\r\n      </li>\r\n      {life.map((item, index) => {\r\n        // 循环每一项\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n\r\n            <mark key=\"1\" style={{ marginTop: \"20px\" }}>\r\n              {item.life}\r\n              {/* 标题 */}\r\n            </mark>\r\n            {/* 内容 */}\r\n            <main key=\"2\">{item.cont}</main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport state from \"./state.json\";\r\n// 引入state的json文件\r\nimport { Divider } from \"antd\";\r\n// 分割线\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      {/* 循环拿到的数据 */}\r\n      {state.map((item, index) => {\r\n        return (\r\n          <React.Fragment key={index}>\r\n            <Divider />\r\n            <mark key=\"1\">{item.title}</mark>\r\n            {/* 标题 */}\r\n            <main key=\"2\">\r\n              {/* 循环json小数组拿每一项的内容 */}\r\n              {item.cont.map((item, index) => {\r\n                return <p key={index}>{item.p}</p>;\r\n              })}\r\n            </main>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n// antd的分割线\r\nimport { Divider } from \"antd\";\r\n// react高级之插槽页\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <mark>\r\n        插槽：父组件引入子组件的地方采用双标签，在里面写一些结构，在对应子组件里直接用props.children接收即可渲染到页面，这叫隐式渲染也就是react的插槽\r\n        <main style={{ color: \"red\" }}>举例说明：</main>\r\n        {/* 举例的父组件图片 */}\r\n        <img\r\n          style={{ width: \"100%\", height: \"200px\" }}\r\n          src={require(\"./img/bs-004-fu.png\")}\r\n          alt=\"\"\r\n        />\r\n        <Divider />\r\n        <Divider />\r\n        <Divider />\r\n        {/* 三个分割线 */}\r\n        <img\r\n          // 举例的子组件图片\r\n          style={{ width: \"100%\", height: \"200px\" }}\r\n          src={require(\"./img/bs-004-zi.png\")}\r\n          alt=\"\"\r\n        />\r\n      </mark>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n// react高级\r\nimport { Card } from \"antd\";\r\n// 引入 card插件\r\nimport TopApi from \"./top-Api\";\r\nimport Jsx from \"./Jsx\";\r\nimport Gaojie from \"./Gaojie\";\r\nimport Life from \"./Life\";\r\nimport State from \"./State\";\r\nimport Chacao from \"./Chacao\";\r\n// 引入每一个标题导航的跳转模块\r\nimport { message } from \"antd\";\r\n// 引入antd的提示\r\nimport \"./index.scss\";\r\n\r\nconst Gaoji = [\r\n  {\r\n    title: \"顶级Api\",\r\n    cont: \"对顶级Api的详解\",\r\n    route: \"ReactSenior/Top-Api\"\r\n  },\r\n  {\r\n    title: \"Jsx\",\r\n    cont: \"对Jsx的详解\",\r\n    route: \"ReactSenior/Top-Jsx\"\r\n  },\r\n  {\r\n    title: \"高阶组件\",\r\n    cont: \"对高阶组件的详解\",\r\n    route: \"ReactSenior/High-order-component\"\r\n  },\r\n  {\r\n    title: \"生命周期\",\r\n    cont: \"对生命周期的详解\",\r\n    route: \"ReactSenior/life\"\r\n  },\r\n  {\r\n    title: \"state状态\",\r\n    cont: \"对状态state以及修改状态setState的详解\",\r\n    route: \"ReactSenior/state\"\r\n  },\r\n  {\r\n    title: \"插槽\",\r\n    cont: \"对插槽的详解\",\r\n    route: \"ReactSenior/chacao\"\r\n  }\r\n];\r\n// 设置每一项的子路由\r\n\r\nexport default class ReactSenior extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isCom: window.location.hash.slice(1)\r\n      // 设置一个拿到的浏览器hash后缀并赋值\r\n    };\r\n\r\n    window.onhashchange = () => {\r\n      // 拿到并监听浏览器的hash\r\n      this.setState({\r\n        // 监听值发生改变就更改state赋的值\r\n        isCom: window.location.hash.slice(1)\r\n      });\r\n    };\r\n  }\r\n  getSonData = idx => {\r\n    // 设置每一项的浏览器hash\r\n    window.location.hash = Gaoji[idx].route;\r\n  };\r\n  componentDidMount() {\r\n    // 加载完弹antd弹窗\r\n    message.success(\"欢迎来到思博的部分~🤣🤣\", 10);\r\n  }\r\n  render() {\r\n    // console.log(this.state.isCom);\r\n    let Dom = \"\";\r\n    // 声明个空值用来赋组件\r\n    switch (this.state.isCom) {\r\n      case \"ReactSenior/Top-Api\":\r\n        Dom = <TopApi />;\r\n        break;\r\n      case \"ReactSenior/Top-Jsx\":\r\n        Dom = <Jsx />;\r\n        break;\r\n      case \"ReactSenior/High-order-component\":\r\n        Dom = <Gaojie />;\r\n        break;\r\n      case \"ReactSenior/life\":\r\n        Dom = <Life />;\r\n        break;\r\n      case \"ReactSenior/state\":\r\n        Dom = <State />;\r\n        break;\r\n      case \"ReactSenior/chacao\":\r\n        Dom = <Chacao />;\r\n        break;\r\n    }\r\n    // 根据条件循环，不同的子路由将Dom渲染为当前条件组件\r\n    return (\r\n      <div className=\"gaoji-bigbox-bs-004\">\r\n        {/* 给个判断，如果是ReactSenior就显示父级模块（六个导航模块） */}\r\n        {this.state.isCom == \"ReactSenior\" ? (\r\n          Gaoji.map((item, index) => {\r\n            return (\r\n              <Card\r\n                // 父级模块  六个导航模块\r\n                key={index}\r\n                title={item.title}\r\n                onClick={() => {\r\n                  this.getSonData(index);\r\n                }}\r\n                style={{ width: 400, marginTop: 30 }}\r\n              >\r\n                <p>{item.cont}</p>\r\n              </Card>\r\n            );\r\n          })\r\n        ) : (\r\n          // 否则根据当前switch循环条件渲染dom\r\n          <>{Dom}</>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Divider } from 'antd';\r\nimport Data from './data.json'\r\nimport './index.css'\r\nexport default ()=> {\r\n\tconsole.log(Data.ThirdPlugins)\r\n\t  return(\r\n\t\t<div>\r\n\t\t\t<div className=\"thirdplugins\">\r\n\t\t\t\t{\r\n\t\t\t\t\tData.ThirdPlugins.map((item,index)=>{\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<p className=\"title\">{item.title}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentone}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contenttwo}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentthree}</p>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentfour}</p>\t\t\r\n\t\t\t\t\t\t\t\t\t<p className=\"Typeface Distance\">{item.contentfive}</p>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t  )\r\n\t\r\n  }\r\n","import React, { Component } from \"react\";\r\nimport Mylayout from \"./components/layout\";\r\n// 引入React基础概述\r\nimport ReactBase from \"./components/ReactBase\";\r\nimport \"antd/dist/antd.css\";\r\n// react组件分类\r\nimport ComponentType from \"./components/componentType\";\r\nimport ReactSenior from \"./components/ReactSenior/allGaoji\";\r\nimport Third from './components/ThirdPlugins'\r\nexport default class index extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isCom: window.location.hash.slice(1) || \"ReactBase\"\r\n    };\r\n\r\n    window.onhashchange = () => {\r\n      this.setState({\r\n        isCom: window.location.hash.slice(1)\r\n      });\r\n    };\r\n  }\r\n  // 收听子组件传递数据\r\n  getSonData = id => {\r\n    window.location.hash = id;\r\n  };\r\n  // 渲染函数\r\n  render() {\r\n    let Dom = \"\";\r\n    switch (this.state.isCom) {\r\n      case \"ReactBase\":\r\n        Dom = <ReactBase />;\r\n        break;\r\n      case \"ComponentType\":\r\n        Dom = <ComponentType />;\r\n        break;\r\n      case \"ReactSenior\":\r\n        Dom = <ReactSenior />;\r\n        break;\r\n      case \"third-plugins\":\r\n        Dom = <Third />;\r\n        break;\r\n    }\r\n    return <Mylayout getsondata={this.getSonData}>{Dom}</Mylayout>;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// 引入Ant design 样式\r\nimport 'antd/es/date-picker/style/css';\r\nimport './style/index.css';\r\nimport App from './blog';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}